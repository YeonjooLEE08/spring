<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!--해당 패키지 내에 있는 클래스들을 프로젝트 실행 시--> 
	<!--로드하여 미리 객체를 만들 준비를 함 -->
	<context:component-scan base-package="com.kh.library.admin.service"/>
	<context:component-scan base-package="com.kh.library.board.service"/>
	<context:component-scan base-package="com.kh.library.book.service"/>
	<context:component-scan base-package="com.kh.library.club.service"/>
	<context:component-scan base-package="com.kh.library.item.service"/>
	<context:component-scan base-package="com.kh.library.member.service"/>
	
	<!-- 어노테이션으로 트렌잭션 처리를 하기 위한 설정 -->
   <!-- <tx:annotation-driven/> -->
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Oracle 디비 연결 객체 생성 -->
	
	 <bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource">
         <property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
         <property name="url" value="jdbc:oracle:thin:@BOOKSHELF_high?TNS_ADMIN=C:\\dev\\Wallet_BOOKSHELF"></property>
         <property name="username" value="admin"></property>
         <property name="password" value="KH2002**library"></property>
      </bean>
      
	<!-- sql문 console에 로그로 출력해주는 객체 생성 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
	    <constructor-arg ref="dataSourceSpied" />
	    <property name="logFormatter">
	        <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
	            <property name="loggingType" value="MULTI_LINE" />
	            <property name="sqlPrefix" value="SQL:::" />
	        </bean>
	    </property>
	</bean>
	
	<!-- Mybatis 사용을 위한 객체 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:sql-map-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<!-- <property name="mapperLocations" value="classpath:mapper/*-mapper.xml"></property> -->
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- 트랜젝션 매니저 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
   </bean> 
   
	<!-- 파일업로드 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
       <!-- 용량 -->
       <property name="maxUploadSize" value="10485760" />
       <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    
     <!-- google email -->
   		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	       <property name="host" value="smtp.gmail.com" />
	       <property name="port" value="587" />
	       <property name="username" value="surfurlove@gmail.com" />
	       <property name="password" value="thdgPtn0719" />
	       <property name="javaMailProperties">
	           <props>
	               <prop key="mail.transport.protocol">smtp</prop>
	               <prop key="mail.smtp.auth">true</prop>
	               <prop key="mail.smtp.starttls.enable">true</prop>
	               <prop key="mail.debug">true</prop>
	           </props>
	       </property>
	   </bean>	
		
</beans>





